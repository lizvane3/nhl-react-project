{"version":3,"sources":["nhllogo.png","components/HeaderComponent.js","components/ModalComponent.js","components/ContentComponent.js","components/HomeComponent.js","components/DrawerComponent.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","theme","appBar","zIndex","drawer","props","classes","react_default","a","createElement","Fragment","CssBaseline_default","AppBar_default","position","className","Toolbar_default","Avatar_default","alt","src","NhlLogo","Typography_default","variant","color","noWrap","card","maxWidth","media","height","paddingTop","nationality","_useState","useState","_useState2","Object","slicedToArray","country","setCountry","_useState3","_useState4","flag","setFlag","useLayoutEffect","fetch","concat","then","response","json","data","name","id","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","Card_default","CardMedia_default","image","toolbar","mixins","textField","marginLeft","spacing","unit","marginRight","width","menu","list","teamName","players","setPlayers","playersCopy","setPlayerCopy","_useState5","_useState6","order","setOrder","_useState7","_useState8","setNationality","positions","values","reduce","prev","next","assign","defineProperty","_useReducer","useReducer","_ref","value","dispatch","Paper_default","component","gutterBottom","TextField_default","select","label","helperText","margin","SelectProps","native","MenuProps","onChange","e","pos","filtered","filter","filterByPosition","target","map","option","index","key","Table_default","TableHead_default","TableRow_default","TableCell_default","onClick","asc","sort","b","jerseyNumber","align","index_es","title","placement","TableSortLabel_default","person","fullName","TableBody_default","row","data-toggle","data-target","idPerson","people","scope","components_ModalComponent","teams","setTeams","roster","playerList","setPlayerList","setTeamName","useEffect","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","axios","sent","stop","apply","this","arguments","fetchData","Drawer_default","List_default","ListItem_default","button","idTeam","ListItemIcon_default","ListItemText_default","primary","length","components_ContentComponent","components_HomeComponent","App","components_HeaderComponent","DrawerComponent","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89ba1ad2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nhllogo.9a7d262e.png\";","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from '@material-ui/core/Avatar';\nimport NhlLogo from '../nhllogo.png';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n});\n\nfunction HeaderComponent(props) {\n  const { classes } = props;\n  \n  return (\n  <React.Fragment >\n    <CssBaseline />\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <Avatar alt=\"Remy Sharp\" src={NhlLogo} className='avatar' />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>National Hockey Leage NHL</Typography>\n      </Toolbar>\n    </AppBar>\n  </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(HeaderComponent);\n","import React, { useState, useLayoutEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '100%',\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n});\n\nfunction ModalComponent( props) {\n  const { classes, nationality } = props;\n  const [country, setCountry] = useState('');\n  const [flag, setFlag] = useState('');\n  \n  useLayoutEffect(() => {\n    fetch(`https://restcountries.eu/rest/v2/alpha/${nationality}`)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(data.name);\n      setFlag(data.flag);\n    });      \n  },[nationality]);\n\n  return (\n  <React.Fragment>\n    <div className=\"modal fade\" id=\"flagModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"flagModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"flagModalLabel\">{country}</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <Card className={classes.card}>\n              <CardMedia className={classes.media} image={flag} />\n            </Card>\n          </div>\n          <div className=\"modal-footer\"></div>\n        </div>\n      </div>\n    </div>\n  </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(ModalComponent);\n","import React, { useState, useLayoutEffect, useReducer } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Tooltip } from \"@material-ui/core\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from '@material-ui/core/Typography';\nimport ModalComponent from './ModalComponent';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  textField: {\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit,\n    width: 300,\n  },\n  menu: {\n    width: 200\n  },\n});\n\nfunction ContentComponent(props) {\n  const { classes, list, teamName } = props;\n  const [players, setPlayers] = useState(list);\n  const [playersCopy, setPlayerCopy] = useState(list);\n  const [order, setOrder] = useState(false);\n  const [nationality, setNationality] = useState();\n\n  const positions = Object.values( playersCopy.reduce( (prev, next) => Object.assign( prev,{ [next.position.name]: next } ), {} ));\n\n  useLayoutEffect(() => {\n    setPlayers(list);\n    setPlayerCopy(list);\n  },[list]);\n\n  const [, dispatch] = useReducer(({ type, value }) => {\n    switch (type) {\n      case \"SORT BY NUMBER\":\n        return [value];\n      case \"SORT BY NAME\":\n        return [value];\n      default:\n        return players;\n    }\n  }, players);\n\n  function sortByNumber(asc) {\n    if(asc) {\n      players.sort(function(a, b) {\n        return a.jerseyNumber - b.jerseyNumber\n      })\n      setOrder(true);\n    } else {\n      players.sort(function(a, b) {\n        return b.jerseyNumber - a.jerseyNumber;\n      })\n      setOrder(false);\n    }\n  }\n\n  function sortByName(asc) {\n    players.sort(function(a, b) {\n      if(asc) {\n        setOrder(true);\n        return (a.person.fullName > b.person.fullName) ? 1 : ((a.person.fullName < b.person.fullName) ? -1 : 0);\n      } else {\n        setOrder(false);\n        return (b.person.fullName > a.person.fullName) ? 1 : ((b.person.fullName < a.person.fullName) ? -1 : 0);\n      }\n    });\n  }\n  \n  function filterByPosition(pos) {\n    if(pos !== '') {\n      const filtered = playersCopy.filter((value) => {\n        return value.position.name === pos;\n      });\n      setPlayers(filtered);\n    } else {\n      setPlayers(list);\n    }\n  }\n\n  function getPlayerNationality(idPerson) {\n    fetch( `https://statsapi.web.nhl.com/api/v1/people/${idPerson}` )\n    .then(response => response.json())\n    .then(data => {\n      setNationality(data.people[0].nationality);\n    });\n  }\n\n  return (\n  <React.Fragment>\n    <main className='content'>\n      <div className={classes.toolbar} />\n      <Paper className='rootMainContent'>\n        <Typography component=\"h2\" variant=\"display1\" gutterBottom className='title'>\n          {teamName}\n        </Typography>\n        <TextField select label=\"Select player position\"\n          className={classes.textField} variant=\"outlined\"\n          helperText=\"Please select a player position\"\n          margin=\"normal\"\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          onChange={e => filterByPosition(e.target.value)}>\n\n          <option value='' />\n          {positions.map((option, index) => (\n          <option key={index} value={option.position.name}>\n            {option.position.name}\n          </option>\n          ))}\n        </TextField>\n        <Table className='table'>\n          <TableHead>\n            <TableRow>\n              <TableCell onClick={() => dispatch({type:'SORT BY NUMBER', value:sortByNumber(!order)}) } align=\"center\">\n                <Tooltip title=\"Sort\" placement=\"bottom-start\">\n                  <TableSortLabel># Jersey Number</TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell align=\"left\" onClick={() => dispatch({type:'SORT BY NAME', value:sortByName(!order)}) }>\n                <Tooltip title=\"Sort\" placement=\"bottom-start\">\n                  <TableSortLabel>Player Name</TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell align=\"left\">Position</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {players.map(row => (\n            <TableRow key={row.person.id} className='cursor' data-toggle=\"modal\" data-target=\"#flagModal\" onClick={() => getPlayerNationality(row.person.id)}>\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                {row.jerseyNumber}\n              </TableCell>\n              <TableCell align=\"left\">{row.person.fullName}</TableCell>\n              <TableCell align=\"left\">{row.position.name}</TableCell>\n            </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n      <ModalComponent nationality={nationality}></ModalComponent>\n    </main>\n  </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(ContentComponent);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n});\n\nfunction HomeComponent(props) {\n  const {classes} = props;\n  \n  return (\n  <React.Fragment>\n    <main className='homeContent'>\n      <div className={classes.toolbar} />\n      <div className='homeBackground' />\n    </main>\n  </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(HomeComponent);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport ContentComponent from './ContentComponent';\nimport HomeComponent from './HomeComponent'\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n});\n\nfunction DrawerComponet(props) {\n  const [teams, setTeams] = useState({teams: []});\n  const [playerList, setPlayerList] = useState({roster: []});\n  const [teamName, setTeamName] = useState('');\n  const { classes } = props;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        'https://statsapi.web.nhl.com/api/v1/teams/'\n      );\n      setTeams(result.data);\n    };\n    fetchData();\n  },[]);\n  \n  function urlImg(id) {\n    return `https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${id}.svg`;\n  }\n\n  function getPlayerList(idTeam, name) {\n    fetch(`https://statsapi.web.nhl.com/api/v1/teams/${idTeam}/roster`)\n    .then(response => response.json())\n    .then(data => {\n      setPlayerList(data);\n      setTeamName(name);\n    });      \n  }\n  \n  return (\n  <React.Fragment>\n    <Drawer className='drawer' variant=\"permanent\">\n      <div className={classes.toolbar} />\n      <List>\n        {teams.teams.map((data) => (\n        <ListItem button key={data.id} onClick={() => getPlayerList(data.id, data.name)}>\n          <ListItemIcon>\n            <Avatar alt=\"Remy Sharp\" src={urlImg(data.id)} />\n          </ListItemIcon>\n          <ListItemText primary={data.name}  />\n        </ListItem>\n        ))}\n      </List>\n    </Drawer>\n    {playerList.roster.length > 0 ? <ContentComponent list={playerList.roster} teamName={teamName}/> : <HomeComponent />}\n  </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(DrawerComponet);","import React  from 'react';\nimport HeaderComponent from './HeaderComponent';\nimport DrawerComponent from './DrawerComponent';\nimport '../App.css';\n\nfunction App() {\n  return (\n    <div className='root' >\n      <HeaderComponent />\n      <DrawerComponent  />\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}